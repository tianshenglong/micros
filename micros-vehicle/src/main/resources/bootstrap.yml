#这里使用的是 bootstrap.yml 这个配置，bootstrap的优先级高于application，很多配置都是要在服务启动前加载，
eureka:
  client:
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/
  instance:
    ip-address: 127.0.0.1
    prefer-ip-address: true
    instance-id: ${spring.application.name}
    #    instance-id: ${eureka.instance.ip-address}:${spring.application.name}:${server.port}
    status-page-url: http://${eureka.instance.ip-address}:${server.port}/actuator/info
    health-check-url: http://${eureka.instance.ip-address}:${server.port}/actuator/health
    home-page-url: http://${eureka.instance.ip-address}:${server.port}/
#logging:
#  config: classpath:log4j2.xml
#  level:
#    com:
#      study:
#        microsuser:
#          dao: debug

#启用hystrix
feign:
  hystrix:
    enabled: true

server:
  port: 8203
  undertow:
    accesslog:
      enabled: true
      dir: logs/server
spring:
  application:
    name: micros-vehicle
  profiles:
    active: dev
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    default-property-inclusion: always
    time-zone: GMT+8
  cloud:
    config:
      name: micros-vehicle
      # 配置服务的URL【如果使用eureka，则不再写URL，使用下面的discovery的形式】
      #      uri: http://127.0.0.1:8087/
      discovery:
        enabled: false
        service-id: micros-config
      uri:
        - http://localhost:8888
      #        http://localhost:8888
      enabled: true
      #启动什么环境下的配置
      profile: dev
management:
  endpoints:
    web:
      exposure:
        include: refresh,health,info
  endpoint:
    health:
      show-details: always
  server: # 指定actuator端口。如果不指定则与系统服务端口一致。建议修改
    port: 8887
